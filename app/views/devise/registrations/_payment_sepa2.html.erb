<fieldset>
  <div class="row">
   <label for="name">
     Vor und Nachname
   </label>
   <input type="text" name="name" id="name"> 
  </div>
  <div class="row">
    <label for="iban-element">
      IBAN
    </label>
    <div id="iban-element">
      <!-- A Stripe Element will be inserted here. -->
    </div>
  </div>    
</fieldset>
<div id="bank-name"></div>

<script>
  // Create a Stripe client.
  // Note: this merchant has been set up for demo purposes.
  var stripe = Stripe('pk_test_6pRNASCoBOKtIshFeQd4XMUh');

  // Create an instance of Elements.
  var elements = stripe.elements();

  // Custom styling can be passed to options when creating an Element.
  // (Note that this demo uses a wider set of styles than the guide below.)
  
  var style = {
    base: {
      // Add your base input styles here. For example:
      fontSize: '16px',
      color: "#32325d",
    }
  };
  
  var options = {
    supportedCountries: ['SEPA'],
    // If you know the country of the customer, you can optionally pass it to
    // the Element as placeholderCountry. The example IBAN that is being used
    // as placeholder reflects the IBAN format of that country.
    placeholderCountry: 'DE',
  }
  
  // Create an instance of the iban Element.
  var iban = elements.create('iban', {
    style: style,
    supportedCountries: ['SEPA'],
  });

  // Add an instance of the iban Element into the `iban-element` <div>.
  iban.mount('#iban-element');

  var errorMessage = document.getElementById('error-message');
  var bankName = document.getElementById('bank-name');

iban.on('change', function(event) {
    // Handle real-time validation errors from the iban Element.
    if (event.error) {
      errorMessage.textContent = event.error.message;
      errorMessage.classList.add('visible');
    } else {
      errorMessage.classList.remove('visible');
  }

  // Display bank name corresponding to IBAN, if available.
  if (event.bankName) {
    bankName.textContent = event.bankName;
    bankName.classList.add('visible');
  } else {
    bankName.classList.remove('visible');
  }
});

// Handle form submission.
var form = document.getElementById('edit_user_<%= @user.id %>');
form.addEventListener('submit', function(event) {
  event.preventDefault();

  var sourceData = {
    type: 'sepa_debit',
    currency: 'eur',
    owner: {
      name: document.querySelector('input[name="name"]').value
    },
    mandate: {
      // Automatically send a mandate notification email to your customer
      // once the source is charged.
      notification_method: 'email',
    }
  };

    // Call `stripe.createSource` with the iban Element and additional options.
    stripe.createSource(iban, sourceData).then(function(result) {
      if (result.error) {
        // Inform the customer that there was an error.
        errorMessage.textContent = result.error.message;
        errorMessage.classList.add('visible');
        stopLoading();
      } else {
        // Send the Source to your server to create a charge.
        errorMessage.classList.remove('visible');
        stripeSourceHandler(result.source);
      }
    });
  });
</script>